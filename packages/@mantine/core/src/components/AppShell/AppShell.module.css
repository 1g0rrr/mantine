.root {
  &[data-resizing] {
    --app-shell-transition-duration: 0ms !important;
  }

  &[data-disabled] {
    --app-shell-header-offset: 0px !important;
    --app-shell-navbar-offset: 0px !important;
  }

  @mixin light {
    --app-shell-border-color: var(--mantine-color-gray-3);
  }

  @mixin dark {
    --app-shell-border-color: var(--mantine-color-dark-4);
  }
}

.navbar,
.aside,
.header,
.main,
.footer {
  transition-duration: var(--app-shell-transition-duration);
  transition-timing-function: var(--app-shell-transition-timing-function);
}

.navbar,
.aside {
  position: fixed;
  display: flex;
  flex-direction: column;
  top: var(--app-shell-header-offset, 0px);
  height: calc(100dvh - var(--app-shell-header-offset, 0px) - var(--app-shell-footer-offset, 0px));
  background-color: var(--mantine-color-body);
  transition-property: transform, top, height;

  :where([data-layout='alt']) & {
    top: 0px;
    height: 100dvh;
  }
}

.navbar {
  left: 0;
  width: var(--app-shell-navbar-width);
  transition-property: transform, top, height;
  transform: var(--app-shell-navbar-transform);
  z-index: var(--app-shell-navbar-z-index);

  @mixin where-rtl {
    left: auto;
    right: 0;
    transform: var(--app-shell-navbar-transform-rtl);
  }

  &:where([data-with-border]) {
    border-right: rem(1px) solid var(--app-shell-border-color);

    @mixin where-rtl {
      border-right: none;
      border-left: rem(1px) solid var(--app-shell-border-color);
    }
  }
}

.aside {
  right: 0;
  width: var(--app-shell-aside-width);
  transform: var(--app-shell-aside-transform);
  z-index: var(--app-shell-aside-z-index);

  @mixin where-rtl {
    left: 0px;
    right: auto;
    transform: var(--app-shell-aside-transform-rtl);
  }

  &:where([data-with-border]) {
    border-left: rem(1px) solid var(--app-shell-border-color);

    @mixin where-rtl {
      border-left: none;
      border-right: rem(1px) solid var(--app-shell-border-color);
    }
  }
}

.main {
  padding-left: calc(var(--app-shell-navbar-offset, 0px) + var(--app-shell-padding));
  padding-right: calc(var(--app-shell-aside-offset, 0px) + var(--app-shell-padding));
  padding-top: calc(var(--app-shell-header-offset, 0px) + var(--app-shell-padding));
  padding-bottom: calc(var(--app-shell-footer-offset, 0px) + var(--app-shell-padding));
  min-height: 100dvh;
  transition-property: padding;

  @mixin where-rtl {
    padding-left: calc(var(--app-shell-aside-offset, 0px) + var(--app-shell-padding));
    padding-right: calc(var(--app-shell-navbar-offset, 0px) + var(--app-shell-padding));
  }
}

.header,
.footer {
  position: fixed;
  left: 0;
  right: 0;
  transition-property: transform, left, right;
  background-color: var(--mantine-color-body);

  :where([data-layout='alt']) & {
    left: var(--app-shell-navbar-offset, 0px);

    @mixin where-rtl {
      right: var(--app-shell-navbar-offset, 0px);
      left: 0px;
    }
  }
}

.header {
  top: 0;
  height: var(--app-shell-header-height);
  background-color: var(--mantine-color-body);
  transform: var(--app-shell-header-transform);
  z-index: var(--app-shell-header-z-index);

  &:where([data-with-border]) {
    border-bottom: rem(1px) solid var(--app-shell-border-color);
  }
}

.footer {
  bottom: 0;
  height: var(--app-shell-footer-height);
  transform: var(--app-shell-footer-transform);
  z-index: var(--app-shell-footer-z-index);

  &:where([data-with-border]) {
    border-top: rem(1px) solid var(--app-shell-border-color);
  }
}

.section {
  flex-grow: 0;

  &:where([data-grow]) {
    flex-grow: 1;
  }
}
