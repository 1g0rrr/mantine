.root {
  --carousel-height: auto;
  position: relative;
}

.viewport {
  height: var(--carousel-height);
  overflow: hidden;
}

.container {
  display: flex;
  flex-direction: row;
  height: var(--carousel-height);

  :where([data-include-gap-in-size]) & {
    &:where([data-orientation='vertical']) {
      margin-bottom: calc(var(--carousel-slide-gap) * -1);
    }

    &:where([data-orientation='horizontal']) {
      margin-right: calc(var(--carousel-slide-gap) * -1);

      @mixin where-rtl {
        margin-left: calc(var(--carousel-slide-gap) * -1);
        margin-right: 0;
      }
    }
  }

  &:where([data-orientation='vertical']) {
    flex-direction: column;
  }
}

.controls {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: space-between;
  z-index: 1;
  pointer-events: none;

  .root:where([data-orientation='vertical']) & {
    left: calc(50% - var(--carousel-control-size) / 2);
    top: 0;
    bottom: 0;
    flex-direction: column;
    padding: var(--carousel-controls-offset) 0;
  }

  .root:where([data-orientation='horizontal']) & {
    left: 0;
    right: 0;
    top: calc(50% - var(--carousel-control-size) / 2);
    flex-direction: row;
    padding: 0 var(--carousel-controls-offset);
  }
}

.control {
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: var(--carousel-control-size);
  min-height: var(--carousel-control-size);
  border-radius: var(--carousel-control-size);
  pointer-events: all;
  background-color: var(--mantine-color-white);
  color: var(--mantine-color-black);
  box-shadow: var(--mantine-shadow-md);
  border: rem(1px) solid var(--mantine-color-gray-3);
  transition: opacity 100ms ease;

  @mixin where-light {
    opacity: 0.85;
  }

  @mixin where-dark {
    opacity: 0.65;
  }

  @mixin hover {
    opacity: 1;
  }
}

.indicators {
  position: absolute;
  display: flex;
  justify-content: center;
  gap: rem(8px);
  pointer-events: none;

  .root:where([data-orientation='vertical']) & {
    bottom: 0;
    top: 0;
    right: var(--mantine-spacing-md);
    flex-direction: column;
  }

  .root:where([data-orientation='horizontal']) & {
    bottom: var(--mantine-spacing-md);
    left: 0;
    right: 0;
    flex-direction: row;
  }
}

.indicator {
  pointer-events: all;
  border-radius: var(--mantine-radius-xl);
  box-shadow: var(--mantine-shadow-sm);
  opacity: 0.6;
  background-color: var(--mantine-color-white);

  @mixin hover {
    opacity: 1;
  }

  &:where([data-active]) {
    opacity: 1;
  }

  .root:where([data-orientation='vertical']) & {
    width: rem(5px);
    height: rem(25px);
  }

  .root:where([data-orientation='horizontal']) & {
    width: rem(25px);
    height: rem(5px);
  }
}

.slide {
  position: relative;
  flex: 0 0 var(--carousel-slide-size);

  .root:where([data-include-gap-in-size]) & {
    &:where([data-orientation='vertical']) {
      padding-bottom: var(--carousel-slide-gap);
    }

    &:where([data-orientation='horizontal']) {
      padding-right: var(--carousel-slide-gap);

      @mixin where-rtl {
        padding-left: var(--carousel-slide-gap);
        padding-right: 0;
      }
    }
  }

  .root:where(:not([data-include-gap-in-size])) & {
    &:where([data-orientation='vertical']) {
      margin-bottom: var(--carousel-slide-gap);
    }

    &:where([data-orientation='horizontal']) {
      margin-right: var(--carousel-slide-gap);

      @mixin where-rtl {
        margin-left: var(--carousel-slide-gap);
        margin-right: 0;
      }
    }
  }
}
